openapi: 3.1.0
info:
  version: 1.0.0
  title: Conquery API
  description: Conquery API
  license:
    identifier: TODO
    name: TODO
    url: http://TODO/
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      
  responses:
    unauthorized:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      description: The user is not logged in.
  schemas:
    id:
      type: string
    tableId:
      $ref: "#/components/schemas/id"
    datasetId:
      $ref: "#/components/schemas/id"
    filterId:
      $ref: "#/components/schemas/id"
    conceptId:
      $ref: "#/components/schemas/id"
    executionId:
      $ref: "#/components/schemas/id"
    
    feValue:
      type: object
      properties:
        value: 
          type: string
        label:
          type: string
        optionValue:
          type: string
      required:
        - "value"
    resolved-filter-result:
      type: [object, null]
      properties:
        tableId:
          $ref: "#/components/schemas/tableId"
        filterId:
          $ref: "#/components/schemas/filterId"
        value:
          type: array
          items:
            $ref: "#/components/schemas/feValue"
    resolved-concepts-result:
      type: object
      properties:
        resolvedConcepts:
          type: array
          uniqueItems: true
          items:
            type: string
        unkownCodes:
          type: array
          uniqueItems: true
          items:
            type: string
        resolvedFilter:
          $ref: "#/components/schemas/resolved-filter-result"
      
    mail:
      type: string
      format: mail
    column-config:
      type: object
      properties:
        name:
          description: Name of the Column-Config to be used when resolving with Upload.
          type: string
        label:
          description: Map of Localized labels.
          type: object
          items:
            type: string
        description:
          description: Map of Localized descriptions.
          type: object
          items:
            type: string
        field:
          type: string
          description: Name of column in csv
        pad:
          description: Pad-String when uploading data, to avoid problems with some tools truncating leading zeros or similar.
          type: string
        length:
          description: In conjunction with pad, the length of the padded string.
          type: integer
        resolvable:
          description: True, if the Column should be printed to output. This can be used to have resolvable but not printable fields in mapping.
          type: boolean
        print:
          description: True, if the Column should be printed to output. This can be used to have resolvable but not printable fields in mapping.
          type: boolean
        fillAnon:
          description: True, if the field will be used to fill with anonymized ids, when the user is not allowed seeing real ids.
          type: boolean
         
    upload-config:
      description: Describes the format of ids for EXTERNAL and entity-preview id kinds. Also describes the output format for ids in the result files.
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: "#/components/schemas/column-config"

    currency-config:
      description: Describes how the frontend shall interpret and display currency values.
      type: object
      properties:
        prefix:
          type: string
        thousandSeparator:
          type: string
        decimalSeparator:
          type: string
        decimalScale:
          type: string

    frontend-config:
      type: object
      properties:
        version:
          type: string
        manualUrl:
          type: string
          format: url
        contactEmail:
          $ref: "#/components/schemas/mail"
        currency:
          $ref: "#/components/schemas/currency-config"
        upload:
          $ref: "#/components/schemas/upload-config"
    error:
      type: object
      properties:
        message:
          type: string
        code:
          type: number
    concept-code-list:
      type: object
      properties:
        concepts:
          type: array
          items:
            type: string
        
    id-label:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/id"
        label:
          type: string
    datasetAbility:
      type: object
      properties:
        canUpload:
          type: boolean
    me:
      type: object
      properties:
        userName:
          type: string
        hideLogoutButton:
          type: boolean
        datasetAbilities:
          description: per dataset abilities of the logged in User.
          type: object
          additionalProperties:
            $ref: "#/components/schemas/datasetAbility"
        groups:
          type: array
          items:
            $ref: "#/components/schemas/id-label"

security:
  - BasicAuth: []
  - Bearer: []

servers:
  - url: http://lyo-peva02:8080/api
paths:
  /frontend/config:
    get:
      summary: An Endpoint describing configuration for the frontend.
      operationId: get-frontend-config
      responses:
        "200":
          description: The Configuration for the Frontend
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/frontend-config"
        "401":
          $ref: "#/components/responses/unauthorized"

  /me:
    get:
      operationId: get-me
      summary: Fetches description of the currently logged in user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/me"
          description: Description of the user
        "401":
          $ref: "#/components/responses/unauthorized"

  /datasets/{dataset}/concepts/{concept}/resolve/:
    post:
      parameters:
        - in: path
          name: dataset
          required: true
          schema:
            $ref: "#/components/schemas/datasetId"
        - in: path
          name: concept
          required: true
          schema:
            $ref: "#/components/schemas/conceptId"
      operationId: resolve-concepts
      summary: Resolve values to concept-ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/concept-code-list"
      responses:
        '400':
          description: When the requested Concept does not have children.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '200':
          description: Resolved Concepts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resolved-concepts-result"
                

 
            
