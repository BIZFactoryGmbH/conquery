trigger:
- master

variables:
  EXCLUDE_SOURCE_MAPS: true
  MVN_CFG: -B -V -Dmaven.repo.local=$(Build.Repository.LocalPath)/cache/.m2
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
  inputs:
    keyfile: .gitignore
    targetfolder: cache
    vstsFeed: $(ArtifactFeed)

- task: Maven@3
  displayName: build root
  inputs:
    jdkVersionOption: '1.11'
    goals: install
    options: $(MVN_CFG) -T 1C -N

- task: Maven@3
  displayName: frontend tests
  inputs:
    jdkVersionOption: '1.11'
    goals: install
    options: $(MVN_CFG) -pl frontend-resources

- task: Maven@3
  displayName: unit tests
  inputs:
    jdkVersionOption: '1.11'
    goals: install
    options: $(MVN_CFG) -T 1C -pl backend -DexcludedGroups="INTEGRATION_PROGRAMMATIC, INTEGRATION_JSON"

- task: Maven@3
  displayName: programmatic integration tests
  inputs:
    jdkVersionOption: '1.11'
    goals: test
    options: $(MVN_CFG) -T 1C -pl backend -Dgroups="INTEGRATION_PROGRAMMATIC"

- task: Maven@3
  displayName: json integration tests
  inputs:
    jdkVersionOption: '1.11'
    goals: test
    options: $(MVN_CFG) -T 1C -pl backend -Dgroups="INTEGRATION_JSON"

- task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
  inputs:
    keyfile: .gitignore
    targetfolder: cache
    vstsFeed: $(ArtifactFeed)